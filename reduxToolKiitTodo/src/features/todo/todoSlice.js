import { createSlice, nanoid } from "@reduxjs/toolkit"; // createSlice: A helper function from Redux Toolkit that simplifies writing Redux logic. It generates action creators and action types automatically. nanoid: A function used to generate a unique ID. Ideal for keys like todo item IDs.

const initialState = {  // initialState is the default state of our todo slice
  todos: [{ id: 1, text: "Hello World" }],
};

export const todoSlice = createSlice({   // This starts the creation of a slice named todoSlice, and we export it so it can be used elsewhere.
  name: "todo",

  initialState,  // Sets the default state for this slice

  reducers: {  // The reducers field defines the different actions and how they affect the state.
    addTodo: (state, action) => {  // ddTodo is an action. It takes state (current state) and action (dispatched action object).

      // Creates a new todo item with:A unique id generated by nanoid(). text taken from action.payload (i.e., whatever was passed when the action was dispatched).
      const todo = {
        id: nanoid(),
        text: action.payload,
      };
      state.todos.push(todo); // Adds the new todo to the existing todos array
    },

    removeTodo: (state, action) => {
      state.todos = state.todos.filter((todo) => todo.id !== action.payload);  // Filters out the todo whose id matches action.payload, effectively removing it from the list.
    },
  },
});

export const { addTodo, removeTodo } = todoSlice.actions;

export default todoSlice.reducer;
